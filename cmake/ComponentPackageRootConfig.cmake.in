if (NOT @CMAKE_PROJECT_NAME@_FIND_COMPONENTS)
    set(@CMAKE_PROJECT_NAME@_NOT_FOUND_MESSAGE "The \"@CMAKE_PROJECT_NAME@\" package requires at least one component")
    set(@CMAKE_PROJECT_NAME@_FOUND False)
    return()
endif()

include(CMakeFindDependencyMacro)
foreach(module ${@CMAKE_PROJECT_NAME@_FIND_COMPONENTS})
    set (_config_location "${CMAKE_CURRENT_LIST_DIR}")
    # find_dependency should forward the QUIET and REQUIRED arguments
    find_dependency(${module} CONFIG
                    PATHS "${_config_location}"
                    NO_DEFAULT_PATH)
    unset(_config_location)
    if (NOT ${module}_FOUND)
        if (@CMAKE_PROJECT_NAME@_FIND_REQUIRED_${module})
            string(CONCAT _@CMAKE_PROJECT_NAME@_NOTFOUND_MESSAGE
                   "Failed to find @CMAKE_PROJECT_NAME@ component \"${module}\" "
                   "config file at \"${_config_location}\"\n")
        elseif(NOT @CMAKE_PROJECT_NAME@_FIND_QUIETLY)
            message(WARNING "Failed to find @CMAKE_PROJECT_NAME@ component \"${module}\" "
                             "config file at \"${_config_location}\"")
        endif()
    endif()
endforeach()

if (_@CMAKE_PROJECT_NAME@_NOTFOUND_MESSAGE)
    set(@CMAKE_PROJECT_NAME@_NOT_FOUND_MESSAGE "${_@CMAKE_PROJECT_NAME@_NOTFOUND_MESSAGE}")
    set(@CMAKE_PROJECT_NAME@_FOUND False)
endif()
